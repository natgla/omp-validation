#!/bin/bash
# precompilation phase to check feasible validation functions
# Result: Generate a header file for main.c 
#         to indicate viable tests.
# Author: Chunhua Liao , University of Houston
# Date: May,11 2005
#****************************************
if [ $# -lt 2 ]
then
  echo This script need at least two arguments
  echo Usage:$0 TESTFILE_name compiler_option etc.
  echo Exampe:$0 ALL_TEST cc -xopenmp
  exit
fi  
LoadFile=$1
shift
CompilerOption=$*

# An array to store all test in order
# ALL_TEST contains the names of test files
declare -a array1
array1=($(cat "$LoadFile"))

#echo ${array1[@]}
element_count=${#array1[*]}
#echo $element_count


# preCompile all .c files for test functions.
#********************************************

for ((a=0;a<$element_count;a++))
do
    if [ ! -e "${array1[$a]}".o ]
    then
    echo   $CompilerOption -c "${array1[$a]}".c
    #cc -xopenmp -c "${array1[$a]}".c 
    # $1 -c $2 "${array1[$a]}".c 
    $CompilerOption -c "${array1[$a]}".c
   fi
done

# check the existence of .o, writing header for main.c
# *******************************************   
if [ -e feasible_test.h ]
then 
  rm feasible_test.h
fi
touch feasible_test.h
if [ -e failed.compilation ]
then 
  rm failed.compilation
fi
touch failed.compilation

for ((a=0;a<$element_count;a++))
do
    if [ -e "${array1[$a]}".o ]
    then
#      echo "#define test$(($a+1)) ${array1[$a]}" >> feasible_test.h
echo {\"${array1[$a]}\",check_${array1[$a]},crosscheck_${array1[$a]}\}, >>feasible_test.h
      continue
    else
      echo "test$(($a+1)) ${array1[$a]} cannot be compiled." >> failed.compilation
    fi
done
